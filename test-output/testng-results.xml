<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-07-29T15:34:06 CEST" name="Suite" finished-at="2020-07-29T15:34:52 CEST" duration-ms="45589">
    <groups>
    </groups>
    <test started-at="2020-07-29T15:34:06 CEST" name="regression" finished-at="2020-07-29T15:34:52 CEST" duration-ms="45589">
      <class name="com.qa.tests.BackOfficeTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:06 CEST" name="beforeClass" finished-at="2020-07-29T15:34:23 CEST" duration-ms="16517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:23 CEST" name="beforeMethod" finished-at="2020-07-29T15:34:25 CEST" duration-ms="2538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.BackOfficeTest.verifyBackofficeTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyBackofficeTitle()[pri:1, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:25 CEST" name="verifyBackofficeTitle" finished-at="2020-07-29T15:34:25 CEST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackofficeTitle -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:25 CEST" name="AfterMethod" finished-at="2020-07-29T15:34:27 CEST" duration-ms="1832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:27 CEST" name="beforeMethod" finished-at="2020-07-29T15:34:30 CEST" duration-ms="2446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.BackOfficeTest.verifyUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserName()[pri:2, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:30 CEST" name="verifyUserName" finished-at="2020-07-29T15:34:30 CEST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserName -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:30 CEST" name="AfterMethod" finished-at="2020-07-29T15:34:31 CEST" duration-ms="446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:31 CEST" name="beforeMethod" finished-at="2020-07-29T15:34:33 CEST" duration-ms="2432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.BackOfficeTest.verifyContactsLink() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyContactsLink()[pri:3, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:33 CEST" name="verifyContactsLink" finished-at="2020-07-29T15:34:36 CEST" duration-ms="2859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactsLink -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:36 CEST" name="AfterMethod" finished-at="2020-07-29T15:34:36 CEST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.tests.BackOfficeTest@29176cc1]" started-at="2020-07-29T15:34:36 CEST" name="tearDown" finished-at="2020-07-29T15:34:37 CEST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.tests.BackOfficeTest -->
      <class name="com.qa.tests.LoginTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTest@2f177a4b]" started-at="2020-07-29T15:34:37 CEST" name="beforeClass" finished-at="2020-07-29T15:34:40 CEST" duration-ms="3574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@2f177a4b]" started-at="2020-07-29T15:34:40 CEST" name="beforeMethod" finished-at="2020-07-29T15:34:50 CEST" duration-ms="10004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.successFullLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successFullLogin()[pri:0, instance:com.qa.tests.LoginTest@2f177a4b]" started-at="2020-07-29T15:34:50 CEST" name="successFullLogin" finished-at="2020-07-29T15:34:51 CEST" duration-ms="905" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [bbbn,bn,bn] but found [https://ui.freecrm.com/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [bbbn,bn,bn] but found [https://ui.freecrm.com/]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.qa.tests.LoginTest.successFullLogin(LoginTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successFullLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.tests.LoginTest@2f177a4b]" started-at="2020-07-29T15:34:51 CEST" name="tearDown" finished-at="2020-07-29T15:34:52 CEST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.tests.LoginTest -->
    </test> <!-- regression -->
  </suite> <!-- Suite -->
</testng-results>
