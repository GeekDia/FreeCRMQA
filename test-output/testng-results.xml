<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-07-29T20:16:49 CEST" name="Suite" finished-at="2020-07-29T20:18:50 CEST" duration-ms="120818">
    <groups>
    </groups>
    <test started-at="2020-07-29T20:16:49 CEST" name="regression" finished-at="2020-07-29T20:18:50 CEST" duration-ms="120818">
      <class name="com.qa.tests.BackOfficeTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:16:49 CEST" name="beforeClass" finished-at="2020-07-29T20:17:07 CEST" duration-ms="17864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:07 CEST" name="beforeMethod" finished-at="2020-07-29T20:17:10 CEST" duration-ms="2574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.BackOfficeTest.verifyBackofficeTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyBackofficeTitle()[pri:1, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:10 CEST" name="verifyBackofficeTitle" finished-at="2020-07-29T20:17:10 CEST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackofficeTitle -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:10 CEST" name="AfterMethod" finished-at="2020-07-29T20:17:12 CEST" duration-ms="2267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:12 CEST" name="beforeMethod" finished-at="2020-07-29T20:17:15 CEST" duration-ms="2644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.BackOfficeTest.verifyUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserName()[pri:2, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:15 CEST" name="verifyUserName" finished-at="2020-07-29T20:17:16 CEST" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserName -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:16 CEST" name="AfterMethod" finished-at="2020-07-29T20:17:16 CEST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:16 CEST" name="beforeMethod" finished-at="2020-07-29T20:17:19 CEST" duration-ms="2437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.BackOfficeTest.verifyContactsLink() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyContactsLink()[pri:3, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:19 CEST" name="verifyContactsLink" finished-at="2020-07-29T20:17:21 CEST" duration-ms="2898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactsLink -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:21 CEST" name="AfterMethod" finished-at="2020-07-29T20:17:22 CEST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.tests.BackOfficeTest@63a65a25]" started-at="2020-07-29T20:17:22 CEST" name="tearDown" finished-at="2020-07-29T20:17:22 CEST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.tests.BackOfficeTest -->
      <class name="com.qa.tests.LoginTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTest@54c562f7]" started-at="2020-07-29T20:17:22 CEST" name="beforeClass" finished-at="2020-07-29T20:17:26 CEST" duration-ms="3940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@54c562f7]" started-at="2020-07-29T20:17:26 CEST" name="beforeMethod" finished-at="2020-07-29T20:17:36 CEST" duration-ms="10529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.successFullLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successFullLogin()[pri:0, instance:com.qa.tests.LoginTest@54c562f7]" started-at="2020-07-29T20:17:36 CEST" name="successFullLogin" finished-at="2020-07-29T20:17:37 CEST" duration-ms="926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successFullLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.tests.LoginTest@54c562f7]" started-at="2020-07-29T20:17:37 CEST" name="tearDown" finished-at="2020-07-29T20:17:38 CEST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.tests.LoginTest -->
      <class name="com.qa.tests.NewContactTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:17:38 CEST" name="beforeClass" finished-at="2020-07-29T20:17:53 CEST" duration-ms="15700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:17:54 CEST" name="beforeMethod" finished-at="2020-07-29T20:17:57 CEST" duration-ms="2523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.NewContactTest.validateCreateNewContact(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateCreateNewContact(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:17:57 CEST" name="validateCreateNewContact" data-provider="getContactsData" finished-at="2020-07-29T20:18:13 CEST" duration-ms="16090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Joe ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dia]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[VATO]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[joee@yopmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateNewContact -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:13 CEST" name="AfterMethod" finished-at="2020-07-29T20:18:13 CEST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:13 CEST" name="beforeMethod" finished-at="2020-07-29T20:18:16 CEST" duration-ms="2529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.NewContactTest.validateCreateNewContact(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateCreateNewContact(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:16 CEST" name="validateCreateNewContact" data-provider="getContactsData" finished-at="2020-07-29T20:18:31 CEST" duration-ms="15107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Adil]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dio]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[VATI]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[adile@yopmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateNewContact -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:31 CEST" name="AfterMethod" finished-at="2020-07-29T20:18:31 CEST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:31 CEST" name="beforeMethod" finished-at="2020-07-29T20:18:34 CEST" duration-ms="2432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.NewContactTest.validateCreateNewContact(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateCreateNewContact(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:34 CEST" name="validateCreateNewContact" data-provider="getContactsData" finished-at="2020-07-29T20:18:49 CEST" duration-ms="15596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nabi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dpo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[VITA]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[nabil@yopmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateNewContact -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:49 CEST" name="AfterMethod" finished-at="2020-07-29T20:18:50 CEST" duration-ms="406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.tests.NewContactTest@318ba8c8]" started-at="2020-07-29T20:18:50 CEST" name="tearDown" finished-at="2020-07-29T20:18:50 CEST" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.tests.NewContactTest -->
    </test> <!-- regression -->
  </suite> <!-- Suite -->
</testng-results>
